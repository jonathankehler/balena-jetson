diff -Nuar hardware_original/nvidia/platform/t19x/common/kernel-dts/t19x-common-modules/tegra194-camera-imx477-a00.dtsi hardware/nvidia/platform/t19x/common/kernel-dts/t19x-common-modules/tegra194-camera-imx477-a00.dtsi
--- hardware_original/nvidia/platform/t19x/common/kernel-dts/t19x-common-modules/tegra194-camera-imx477-a00.dtsi	1970-01-01 08:00:00.000000000 +0800
+++ hardware/nvidia/platform/t19x/common/kernel-dts/t19x-common-modules/tegra194-camera-imx477-a00.dtsi	2020-02-15 10:21:05.442795951 +0800
@@ -0,0 +1,1255 @@
+/*
+ * Copyright (c) 2016-2019, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+/ {
+	host1x {
+		vi@15c10000 {
+			num-channels = <6>;
+			ports {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				port@0 {
+					reg = <0>;
+					liimx477_vi_in0: endpoint {
+						port-index = <0>;
+						bus-width = <2>;
+						remote-endpoint = <&liimx477_csi_out0>;
+					};
+				};
+				port@1 {
+					reg = <1>;
+					liimx477_vi_in1: endpoint {
+						port-index = <1>;
+						bus-width = <2>;
+						remote-endpoint = <&liimx477_csi_out1>;
+					};
+				};
+				port@2 {
+					reg = <2>;
+					liimx477_vi_in2: endpoint {
+						port-index = <2>;
+						bus-width = <2>;
+						remote-endpoint = <&liimx477_csi_out2>;
+					};
+				};
+				port@3 {
+					reg = <3>;
+					liimx477_vi_in3: endpoint {
+						port-index = <3>;
+						bus-width = <2>;
+						remote-endpoint = <&liimx477_csi_out3>;
+					};
+				};
+				port@4 {
+					reg = <4>;
+					liimx477_vi_in4: endpoint {
+						port-index = <4>;
+						bus-width = <2>;
+						remote-endpoint = <&liimx477_csi_out4>;
+					};
+				};
+				port@5 {
+					reg = <5>;
+					liimx477_vi_in5: endpoint {
+						port-index = <5>;
+						bus-width = <2>;
+						remote-endpoint = <&liimx477_csi_out5>;
+					};
+				};
+			};
+		};
+
+		nvcsi@15a00000 {
+			num-channels = <6>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			channel@0 {
+				reg = <0>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						liimx477_csi_in0: endpoint@0 {
+							port-index = <0>;
+							bus-width = <2>;
+							remote-endpoint = <&liimx477_imx477_out0>;
+						};
+					};
+					port@1 {
+						reg = <1>;
+						liimx477_csi_out0: endpoint@1 {
+							remote-endpoint = <&liimx477_vi_in0>;
+						};
+					};
+				};
+			};
+			channel@1 {
+				reg = <1>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						liimx477_csi_in1: endpoint@2 {
+							port-index = <1>;
+							bus-width = <2>;
+							remote-endpoint = <&liimx477_imx477_out1>;
+						};
+					};
+					port@1 {
+						reg = <1>;
+						liimx477_csi_out1: endpoint@3 {
+							remote-endpoint = <&liimx477_vi_in1>;
+						};
+					};
+				};
+			};
+			channel@2 {
+				reg = <2>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						liimx477_csi_in2: endpoint@4 {
+							port-index = <2>;
+							bus-width = <2>;
+							remote-endpoint = <&liimx477_imx477_out2>;
+						};
+					};
+					port@1 {
+						reg = <1>;
+						liimx477_csi_out2: endpoint@5 {
+							remote-endpoint = <&liimx477_vi_in2>;
+						};
+					};
+				};
+			};
+			channel@3 {
+				reg = <3>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						liimx477_csi_in3: endpoint@6 {
+							port-index = <3>;
+							bus-width = <2>;
+							remote-endpoint = <&liimx477_imx477_out3>;
+						};
+					};
+					port@1 {
+						reg = <1>;
+						liimx477_csi_out3: endpoint@7 {
+							remote-endpoint = <&liimx477_vi_in3>;
+						};
+					};
+				};
+			};
+			channel@4 {
+				reg = <4>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						liimx477_csi_in4: endpoint@8 {
+							port-index = <4>;
+							bus-width = <2>;
+							remote-endpoint = <&liimx477_imx477_out4>;
+						};
+					};
+					port@1 {
+						reg = <1>;
+						liimx477_csi_out4: endpoint@9 {
+							remote-endpoint = <&liimx477_vi_in4>;
+						};
+					};
+				};
+			};
+			channel@5 {
+				reg = <5>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						liimx477_csi_in5: endpoint@10 {
+							port-index = <6>;
+							bus-width = <2>;
+							remote-endpoint = <&liimx477_imx477_out5>;
+						};
+					};
+					port@1 {
+						reg = <1>;
+						liimx477_csi_out5: endpoint@11 {
+							remote-endpoint = <&liimx477_vi_in5>;
+						};
+					};
+				};
+			};
+		};
+	};
+
+	i2c@3180000 {
+		tca9548@77 {
+			i2c@0 {
+			imx477_a@10 {
+				compatible = "nvidia,imx477";
+
+				reg = <0x10>;
+				devnode = "video0";
+
+				/* Physical dimensions of sensor */
+				physical_w = "3.674";
+				physical_h = "2.738";
+
+				sensor_model ="imx477";
+
+				/* Define any required hw resources needed by driver */
+				/* ie. clocks, io pins, power sources */
+				avdd-reg = "vana";
+				iovdd-reg = "vif";
+				dvdd-reg = "vdig";
+
+				/* Defines number of frames to be dropped by driver internally after applying */
+				/* sensor crop settings. Some sensors send corrupt frames after applying */
+				/* crop co-ordinates */
+				/*post_crop_frame_drop = "0";*/
+
+				/* if true, delay gain setting by one frame to be in sync with exposure */
+				delayed_gain = "true";
+
+				has-eeprom;
+				fuse_id_start_addr = <91>;
+				sensor_operation_mode = "master";
+				mode0 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_a";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "4032";
+					active_h = "3040";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1408000";
+					max_framerate = "30000000";
+					step_framerate = "1";
+					default_framerate= "30000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "710227";
+					step_exp_time = "1";
+					default_exp_time = "30000";/* us */
+					embedded_metadata_height = "2";
+				};
+				mode1 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_a";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "2028";
+					active_h = "1520";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "6524";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1420000";
+					max_framerate = "60000000";
+					step_framerate = "1";
+					default_framerate= "60000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "704225";
+					step_exp_time = "1";
+					default_exp_time = "8000";/* us */
+					embedded_metadata_height = "2";
+				};
+				mode2 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_a";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "1920";
+					active_h = "1080";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1420000";
+					max_framerate = "60000000";
+					step_framerate = "1";
+					default_framerate= "60000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "704225";
+					step_exp_time = "1";
+					default_exp_time = "8000";/* us */
+					embedded_metadata_height = "2";
+				};						
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						liimx477_imx477_out0: endpoint {
+							port-index = <0>;
+							bus-width = <2>;
+							remote-endpoint = <&liimx477_csi_in0>;
+							};
+						};
+					};
+				};
+			};
+			i2c@1 {
+			imx477_b@10 {
+				compatible = "nvidia,imx477";
+
+				reg = <0x10>;
+				devnode = "video1";
+
+				/* Physical dimensions of sensor */
+				physical_w = "3.674";
+				physical_h = "2.738";
+
+				sensor_model ="imx477";
+
+				/* Define any required hw resources needed by driver */
+				/* ie. clocks, io pins, power sources */
+				avdd-reg = "vana";
+				iovdd-reg = "vif";
+				dvdd-reg = "vdig";
+
+				/* Defines number of frames to be dropped by driver internally after applying */
+				/* sensor crop settings. Some sensors send corrupt frames after applying */
+				/* crop co-ordinates */
+				/*post_crop_frame_drop = "0";*/
+
+				/* if true, delay gain setting by one frame to be in sync with exposure */
+				delayed_gain = "true";
+
+				has-eeprom;
+				fuse_id_start_addr = <91>;
+				sensor_operation_mode = "slave";				
+				mode0 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_b";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "4032";
+					active_h = "3040";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1408000";
+					max_framerate = "30000000";
+					step_framerate = "1";
+					default_framerate= "30000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "710227";
+					step_exp_time = "1";
+					default_exp_time = "30000";/* us */
+					embedded_metadata_height = "2";
+				};
+				mode1 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_b";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "2028";
+					active_h = "1520";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "6524";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1420000";
+					max_framerate = "60000000";
+					step_framerate = "1";
+					default_framerate= "60000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "704225";
+					step_exp_time = "1";
+					default_exp_time = "8000";/* us */
+					embedded_metadata_height = "2";
+				};
+				mode2 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_b";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "1920";
+					active_h = "1080";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1420000";
+					max_framerate = "60000000";
+					step_framerate = "1";
+					default_framerate= "60000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "704225";
+					step_exp_time = "1";
+					default_exp_time = "8000";/* us */
+					embedded_metadata_height = "2";
+				};						
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						liimx477_imx477_out1: endpoint {
+							port-index = <1>;
+							bus-width = <2>;
+							remote-endpoint = <&liimx477_csi_in1>;
+							};
+						};
+					};
+				};
+			};
+			i2c@2 {
+			imx477_c@10 {
+				compatible = "nvidia,imx477";
+
+				reg = <0x10>;
+				devnode = "video2";
+
+				/* Physical dimensions of sensor */
+				physical_w = "3.674";
+				physical_h = "2.738";
+
+				sensor_model ="imx477";
+
+				/* Define any required hw resources needed by driver */
+				/* ie. clocks, io pins, power sources */
+				avdd-reg = "vana";
+				iovdd-reg = "vif";
+				dvdd-reg = "vdig";
+
+				/* Defines number of frames to be dropped by driver internally after applying */
+				/* sensor crop settings. Some sensors send corrupt frames after applying */
+				/* crop co-ordinates */
+				/*post_crop_frame_drop = "0";*/
+
+				/* if true, delay gain setting by one frame to be in sync with exposure */
+				delayed_gain = "true";
+
+				has-eeprom;
+				fuse_id_start_addr = <91>;
+				sensor_operation_mode = "slave";
+				mode0 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_c";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "4032";
+					active_h = "3040";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1408000";
+					max_framerate = "30000000";
+					step_framerate = "1";
+					default_framerate= "30000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "710227";
+					step_exp_time = "1";
+					default_exp_time = "30000";/* us */
+					embedded_metadata_height = "2";
+				};
+				mode1 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_c";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "2028";
+					active_h = "1520";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "6524";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1420000";
+					max_framerate = "60000000";
+					step_framerate = "1";
+					default_framerate= "60000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "704225";
+					step_exp_time = "1";
+					default_exp_time = "8000";/* us */
+					embedded_metadata_height = "2";
+				};
+				mode2 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_c";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "1920";
+					active_h = "1080";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1420000";
+					max_framerate = "60000000";
+					step_framerate = "1";
+					default_framerate= "60000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "704225";
+					step_exp_time = "1";
+					default_exp_time = "8000";/* us */
+					embedded_metadata_height = "2";
+				};						
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						liimx477_imx477_out2: endpoint {
+							port-index = <2>;
+							bus-width = <2>;
+							remote-endpoint = <&liimx477_csi_in2>;
+							};
+						};
+					};
+				};
+			};
+			i2c@3 {
+			imx477_d@10 {
+				compatible = "nvidia,imx477";
+
+				reg = <0x10>;
+				devnode = "video3";
+
+				/* Physical dimensions of sensor */
+				physical_w = "3.674";
+				physical_h = "2.738";
+
+				sensor_model ="imx477";
+
+				/* Define any required hw resources needed by driver */
+				/* ie. clocks, io pins, power sources */
+				avdd-reg = "vana";
+				iovdd-reg = "vif";
+				dvdd-reg = "vdig";
+
+				/* Defines number of frames to be dropped by driver internally after applying */
+				/* sensor crop settings. Some sensors send corrupt frames after applying */
+				/* crop co-ordinates */
+				/*post_crop_frame_drop = "0";*/
+
+				/* if true, delay gain setting by one frame to be in sync with exposure */
+				delayed_gain = "true";
+
+				has-eeprom;
+				fuse_id_start_addr = <91>;
+				sensor_operation_mode = "slave";
+				mode0 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_d";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "4032";
+					active_h = "3040";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1408000";
+					max_framerate = "30000000";
+					step_framerate = "1";
+					default_framerate= "30000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "710227";
+					step_exp_time = "1";
+					default_exp_time = "30000";/* us */
+					embedded_metadata_height = "2";
+				};
+				mode1 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_d";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "2028";
+					active_h = "1520";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "6524";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1420000";
+					max_framerate = "60000000";
+					step_framerate = "1";
+					default_framerate= "60000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "704225";
+					step_exp_time = "1";
+					default_exp_time = "8000";/* us */
+					embedded_metadata_height = "2";
+				};
+				mode2 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_d";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "1920";
+					active_h = "1080";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1420000";
+					max_framerate = "60000000";
+					step_framerate = "1";
+					default_framerate= "60000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "704225";
+					step_exp_time = "1";
+					default_exp_time = "8000";/* us */
+					embedded_metadata_height = "2";
+				};						
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						liimx477_imx477_out3: endpoint {
+							port-index = <3>;
+							bus-width = <2>;
+							remote-endpoint = <&liimx477_csi_in3>;
+							};
+						};
+					};
+				};
+			};
+			i2c@4 {
+			imx477_e@10 {
+				compatible = "nvidia,imx477";
+
+				reg = <0x10>;
+				devnode = "video4";
+
+				/* Physical dimensions of sensor */
+				physical_w = "3.674";
+				physical_h = "2.738";
+
+				sensor_model ="imx477";
+
+				/* Define any required hw resources needed by driver */
+				/* ie. clocks, io pins, power sources */
+				avdd-reg = "vana";
+				iovdd-reg = "vif";
+				dvdd-reg = "vdig";
+
+				/* Defines number of frames to be dropped by driver internally after applying */
+				/* sensor crop settings. Some sensors send corrupt frames after applying */
+				/* crop co-ordinates */
+				/*post_crop_frame_drop = "0";*/
+
+				/* if true, delay gain setting by one frame to be in sync with exposure */
+				delayed_gain = "true";
+
+				has-eeprom;
+				fuse_id_start_addr = <91>;
+				sensor_operation_mode = "slave";
+				mode0 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_e";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "4032";
+					active_h = "3040";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1408000";
+					max_framerate = "30000000";
+					step_framerate = "1";
+					default_framerate= "30000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "710227";
+					step_exp_time = "1";
+					default_exp_time = "30000";/* us */
+					embedded_metadata_height = "2";
+				};
+				mode1 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_e";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "2028";
+					active_h = "1520";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "6524";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1420000";
+					max_framerate = "60000000";
+					step_framerate = "1";
+					default_framerate= "60000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "704225";
+					step_exp_time = "1";
+					default_exp_time = "8000";/* us */
+					embedded_metadata_height = "2";
+				};
+				mode2 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_e";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "1920";
+					active_h = "1080";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1420000";
+					max_framerate = "60000000";
+					step_framerate = "1";
+					default_framerate= "60000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "704225";
+					step_exp_time = "1";
+					default_exp_time = "8000";/* us */
+					embedded_metadata_height = "2";
+				};						
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						liimx477_imx477_out4: endpoint {
+							port-index = <4>;
+							bus-width = <2>;
+							remote-endpoint = <&liimx477_csi_in4>;
+							};
+						};
+					};
+				};
+			};
+			i2c@5 {
+			imx477_g@10 {
+				compatible = "nvidia,imx477";
+
+				reg = <0x10>;
+				devnode = "video5";
+
+				/* Physical dimensions of sensor */
+				physical_w = "3.674";
+				physical_h = "2.738";
+
+				sensor_model ="imx477";
+
+				/* Define any required hw resources needed by driver */
+				/* ie. clocks, io pins, power sources */
+				avdd-reg = "vana";
+				iovdd-reg = "vif";
+				dvdd-reg = "vdig";
+
+				/* Defines number of frames to be dropped by driver internally after applying */
+				/* sensor crop settings. Some sensors send corrupt frames after applying */
+				/* crop co-ordinates */
+				/*post_crop_frame_drop = "0";*/
+
+				/* if true, delay gain setting by one frame to be in sync with exposure */
+				delayed_gain = "true";
+
+				has-eeprom;
+				fuse_id_start_addr = <91>;
+				sensor_operation_mode = "slave";
+				mode0 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_g";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "4032";
+					active_h = "3040";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1408000";
+					max_framerate = "30000000";
+					step_framerate = "1";
+					default_framerate= "30000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "710227";
+					step_exp_time = "1";
+					default_exp_time = "30000";/* us */
+					embedded_metadata_height = "2";
+				};
+				mode1 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_g";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "2028";
+					active_h = "1520";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "6524";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1420000";
+					max_framerate = "60000000";
+					step_framerate = "1";
+					default_framerate= "60000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "704225";
+					step_exp_time = "1";
+					default_exp_time = "8000";/* us */
+					embedded_metadata_height = "2";
+				};
+				mode2 {/*mode IMX477_MODE_1920X1080_CROP_30FPS*/
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_g";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "1920";
+					active_h = "1080";
+					pixel_t = "bayer_rggb";
+					readout_orientation = "0";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "1000000";
+					min_gain_val = "1000000";
+					max_gain_val = "354000000";
+					step_gain_val = "1";
+					default_gain = "1000000";
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					framerate_factor = "1000000";
+					min_framerate = "1420000";
+					max_framerate = "60000000";
+					step_framerate = "1";
+					default_framerate= "60000000";
+					exposure_factor = "1000000";
+					min_exp_time = "16";
+					max_exp_time = "704225";
+					step_exp_time = "1";
+					default_exp_time = "8000";/* us */
+					embedded_metadata_height = "2";
+				};						
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						liimx477_imx477_out5: endpoint {
+							port-index = <6>;
+							bus-width = <2>;
+							remote-endpoint = <&liimx477_csi_in5>;
+							};
+						};
+					};
+				};
+			};
+		};
+	};
+};
+
+/ {
+
+	tegra-camera-platform {
+		compatible = "nvidia, tegra-camera-platform";
+		/**
+		* Physical settings to calculate max ISO BW
+		*
+		* num_csi_lanes = <>;
+		* Total number of CSI lanes when all cameras are active
+		*
+		* max_lane_speed = <>;
+		* Max lane speed in Kbit/s
+		*
+		* min_bits_per_pixel = <>;
+		* Min bits per pixel
+		*
+		* vi_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the VI ISO case
+		*
+		* vi_bw_margin_pct = <>;
+		* Vi bandwidth margin in percentage
+		*
+		* max_pixel_rate = <>;
+		* Max pixel rate in Kpixel/s for the ISP ISO case
+		*
+		* isp_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the ISP ISO case
+		*
+		* isp_bw_margin_pct = <>;
+		* Isp bandwidth margin in percentage
+		*/
+		num_csi_lanes = <12>;
+		max_lane_speed = <1500000>;
+		min_bits_per_pixel = <10>;
+		vi_peak_byte_per_pixel = <2>;
+		vi_bw_margin_pct = <25>;
+		isp_peak_byte_per_pixel = <5>;
+		isp_bw_margin_pct = <25>;
+
+		/**
+		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
+		 * The first part is the camera_board_id for the module; if the module is in a FFD
+		 * platform, then use the platform name for this part.
+		 * The second part contains the position of the module, ex. "rear" or "front".
+		 * The third part contains the last 6 characters of a part number which is found
+		 * in the module's specsheet from the vender.
+		 */
+		modules {
+			module0 {
+				badge = "imx477_bottomleft_liimx477";
+				position = "bottomleft";
+				orientation = "0";
+				drivernode0 {
+					/* Declare PCL support driver (classically known as guid)  */
+					pcl_id = "v4l2_sensor";
+					/* Driver v4l2 device name */
+					devname = "imx477 30-0010";
+					/* Declare the device-tree hierarchy to driver instance */
+					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9548@77/i2c@0/imx477_a@10";
+				};
+			};
+			module1 {
+				badge = "imx477_centerleft_liimx477";
+				position = "centerleft";
+				orientation = "0";
+				drivernode0 {
+					/* Declare PCL support driver (classically known as guid)  */
+					pcl_id = "v4l2_sensor";
+					/* Driver v4l2 device name */
+					devname = "imx477 31-0010";
+					/* Declare the device-tree hierarchy to driver instance */
+					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9548@77/i2c@1/imx477_b@10";
+				};
+			};
+			module2 {
+				badge = "imx477_centerright_liimx477";
+				position = "centerright";
+				orientation = "0";
+				drivernode0 {
+					/* Declare PCL support driver (classically known as guid)  */
+					pcl_id = "v4l2_sensor";
+					/* Driver v4l2 device name */
+					devname = "imx477 32-0010";
+					/* Declare the device-tree hierarchy to driver instance */
+					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9548@77/i2c@2/imx477_c@10";
+				};
+			};
+			module3 {
+				badge = "imx477_topleft_liimx477";
+				position = "topleft";
+				orientation = "0";
+				drivernode0 {
+					/* Declare PCL support driver (classically known as guid)  */
+					pcl_id = "v4l2_sensor";
+					/* Driver v4l2 device name */
+					devname = "imx477 33-0010";
+					/* Declare the device-tree hierarchy to driver instance */
+					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9548@77/i2c@3/imx477_d@10";
+				};
+			};
+			module4 {
+				badge = "imx477_bottomright_liimx477";
+				position = "bottomright";
+				orientation = "0";
+				drivernode0 {
+					/* Declare PCL support driver (classically known as guid)  */
+					pcl_id = "v4l2_sensor";
+					/* Driver v4l2 device name */
+					devname = "imx477 34-0010";
+					/* Declare the device-tree hierarchy to driver instance */
+					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9548@77/i2c@4/imx477_e@10";
+				};
+			};
+			module5 {
+				badge = "imx477_topright_liimx477";
+				position = "topright";
+				orientation = "0";
+				drivernode0 {
+					/* Declare PCL support driver (classically known as guid)  */
+					pcl_id = "v4l2_sensor";
+					/* Driver v4l2 device name */
+					devname = "imx477 35-0010";
+					/* Declare the device-tree hierarchy to driver instance */
+					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9548@77/i2c@5/imx477_g@10";
+				};
+			};
+		};
+	};
+};
diff -Nuar hardware_original/nvidia/platform/t19x/galen/kernel-dts/common/tegra194-p2822-0000-camera-imx477-a00.dtsi hardware/nvidia/platform/t19x/galen/kernel-dts/common/tegra194-p2822-0000-camera-imx477-a00.dtsi
--- hardware_original/nvidia/platform/t19x/galen/kernel-dts/common/tegra194-p2822-0000-camera-imx477-a00.dtsi	1970-01-01 08:00:00.000000000 +0800
+++ hardware/nvidia/platform/t19x/galen/kernel-dts/common/tegra194-p2822-0000-camera-imx477-a00.dtsi	2020-02-15 11:36:47.585525089 +0800
@@ -0,0 +1,156 @@
+/*
+ * Copyright (c) 2017-2018, NVIDIA CORPORATION.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+#include <t19x-common-modules/tegra194-camera-imx477-a00.dtsi>
+#include "dt-bindings/clock/tegra194-clock.h"
+
+#define CAM0_RST_L	TEGRA194_MAIN_GPIO(H, 3)
+#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
+
+/* camera control gpio definitions */
+
+/ {
+	gpio@2200000 {
+		camera-control-output-low {
+			gpio-hog;
+			output-low;
+			gpios = <CAM0_RST_L 0>;
+			label = "cam0-rst";
+		};
+	};
+
+	i2c@3180000 {
+		tca9548@77 {
+			compatible = "nxp,pca9548";
+			reg = <0x77>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			skip_mux_detect = "yes";
+			vcc-supply = <&p2822_vdd_1v8_cvb>;
+			vcc_lp = "vcc";
+			force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
+
+			i2c@0 {
+				reg = <0>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				imx477_a@10 {
+					/* Define any required hw resources needed by driver */
+					/* ie. clocks, io pins, power sources */
+					clocks = <&bpmp_clks TEGRA194_CLK_EXTPERIPH1>,
+							 <&bpmp_clks TEGRA194_CLK_EXTPERIPH1>;
+					clock-names = "extperiph1", "pllp_grtba";
+					mclk = "extperiph1";
+					vana-supply = <&p2822_avdd_cam_2v8>;
+					vif-supply = <&p2822_vdd_1v8_cvb>;
+					vdig-supply = <&p2822_vdd_sys_en>;
+
+				};
+			};
+			i2c@1 {
+				reg = <1>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				imx477_b@10 {
+					/* Define any required hw resources needed by driver */
+					/* ie. clocks, io pins, power sources */
+					clocks = <&bpmp_clks TEGRA194_CLK_EXTPERIPH1>,
+							 <&bpmp_clks TEGRA194_CLK_EXTPERIPH1>;
+					clock-names = "extperiph1", "pllp_grtba";
+					mclk = "extperiph1";
+					vana-supply = <&p2822_avdd_cam_2v8>;
+					vif-supply = <&p2822_vdd_1v8_cvb>;
+					vdig-supply = <&p2822_vdd_sys_en>;
+
+				};
+			};
+			i2c@2 {
+				reg = <2>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				imx477_c@10 {
+					/* Define any required hw resources needed by driver */
+					/* ie. clocks, io pins, power sources */
+					clocks = <&bpmp_clks TEGRA194_CLK_EXTPERIPH1>,
+							 <&bpmp_clks TEGRA194_CLK_EXTPERIPH1>;
+					clock-names = "extperiph1", "pllp_grtba";
+					mclk = "extperiph1";
+					vana-supply = <&p2822_avdd_cam_2v8>;
+					vif-supply = <&p2822_vdd_1v8_cvb>;
+					vdig-supply = <&p2822_vdd_sys_en>;
+
+				};
+			};
+			i2c@3 {
+				reg = <3>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				imx477_d@10 {
+					/* Define any required hw resources needed by driver */
+					/* ie. clocks, io pins, power sources */
+					clocks = <&bpmp_clks TEGRA194_CLK_EXTPERIPH1>,
+							 <&bpmp_clks TEGRA194_CLK_EXTPERIPH1>;
+					clock-names = "extperiph1", "pllp_grtba";
+					mclk = "extperiph1";
+					vana-supply = <&p2822_avdd_cam_2v8>;
+					vif-supply = <&p2822_vdd_1v8_cvb>;
+					vdig-supply = <&p2822_vdd_sys_en>;
+
+				};
+			};
+			i2c@4 {
+				reg = <4>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				imx477_e@10 {
+					/* Define any required hw resources needed by driver */
+					/* ie. clocks, io pins, power sources */
+					clocks = <&bpmp_clks TEGRA194_CLK_EXTPERIPH2>,
+							 <&bpmp_clks TEGRA194_CLK_EXTPERIPH1>;
+					clock-names = "extperiph1", "pllp_grtba";
+					mclk = "extperiph1";
+					vana-supply = <&p2822_avdd_cam_2v8>;
+					vif-supply = <&p2822_vdd_1v8_cvb>;
+					vdig-supply = <&p2822_vdd_sys_en>;
+
+				};
+			};
+			i2c@5 {
+				reg = <5>;
+				i2c-mux,deselect-on-exit;
+				#address-cells = <1>;
+				#size-cells = <0>;
+				imx477_g@10 {
+					/* Define any required hw resources needed by driver */
+					/* ie. clocks, io pins, power sources */
+					clocks = <&bpmp_clks TEGRA194_CLK_EXTPERIPH2>,
+							 <&bpmp_clks TEGRA194_CLK_EXTPERIPH1>;
+					clock-names = "extperiph1", "pllp_grtba";
+					mclk = "extperiph1";
+					vana-supply = <&p2822_avdd_cam_2v8>;
+					vif-supply = <&p2822_vdd_1v8_cvb>;
+					vdig-supply = <&p2822_vdd_sys_en>;
+
+				};
+			};
+		};
+	};
+};
diff -Nuar hardware_original/nvidia/platform/t19x/galen/kernel-dts/tegra194-p2888-0001-p2822-0000.dts hardware/nvidia/platform/t19x/galen/kernel-dts/tegra194-p2888-0001-p2822-0000.dts
--- hardware_original/nvidia/platform/t19x/galen/kernel-dts/tegra194-p2888-0001-p2822-0000.dts	2019-12-10 14:39:34.000000000 +0800
+++ hardware/nvidia/platform/t19x/galen/kernel-dts/tegra194-p2888-0001-p2822-0000.dts	2020-01-15 16:10:25.588044376 +0800
@@ -13,5 +13,6 @@
  * more details.
  */
 #include "common/tegra194-p2888-0001-p2822-0000-common.dtsi"
-#include "common/tegra194-p2822-camera-modules.dtsi"
-#include "t19x-common-modules/tegra194-camera-plugin-manager.dtsi"
+//#include "common/tegra194-p2822-camera-modules.dtsi"
+//#include "t19x-common-modules/tegra194-camera-plugin-manager.dtsi"
+#include "common/tegra194-p2822-0000-camera-imx477-a00.dtsi"
